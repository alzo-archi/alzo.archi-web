---
import websites from '../data/websites.json';
---

<section
    class="bg-[#DCF0FF] text-[#0085C8] text-center p-4 md:p-10 overflow-hidden relative"
>
    <div class="mt-4 mb-8">
        <h3 class="fs-t2 mb-3 font-bold">Sites web sur mesure, graphiquement uniques</h3>
        <p class="fs-t5 max-w-[60ch] mx-auto opacity-90">
            Chaque site est conçu spécifiquement pour refléter l'identité de votre agence
        </p>
    </div>

    <div class="websites-showcase max-w-6xl mx-auto mt-8 space-y-12 md:space-y-20">
        {websites.map((website, index) => (
            <div class={`website-item ${index % 2 === 0 ? 'left' : 'right'}`}>
                <div class="website-content">
                    <div class="website-text min-w-[50%]">
                        <h4 class="fs-t3 mb-2 font-medium">{website.name}</h4>
                        <p class="fs-t7 opacity-90 leading-tight" set:html={website.description} />
                    </div>
                    <div class="browser-window">
                        <div class="browser-header">
                            <div class="browser-buttons">
                                <span class="browser-btn close"></span>
                                <span class="browser-btn minimize"></span>
                                <span class="browser-btn maximize"></span>
                            </div>
                            <div class="browser-url">{website.domain}</div>
                        </div>
                        <div class="browser-content">
                            <iframe
                                src={website.url}
                                title={website.name}
                                loading="lazy"
                            ></iframe>
                        </div>
                    </div>
                </div>
            </div>
        ))}
    </div>
</section>

<style>
    .websites-showcase {
        perspective: 2000px;
    }

    .website-item {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
    }

    .website-content {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
        align-items: center;
    }

    .website-text {
        text-align: center;
        max-width: 500px;
    }

    /* Desktop layout - alternating left/right */
    @media (min-width: 768px) {
        .website-item {
            flex-direction: row;
        }

        .website-item.left .website-content {
            flex-direction: row;
        }

        .website-item.right .website-content {
            flex-direction: row-reverse;
        }

        .website-item.left .website-text {
            text-align: left;
        }

        .website-item.right .website-text {
            text-align: right;
        }

        .website-item.left .browser-window {
            transform: perspective(2000px) rotateY(-8deg);
        }

        .website-item.right .browser-window {
            transform: perspective(2000px) rotateY(8deg);
        }

        .browser-window:hover {
            transform: perspective(2000px) rotateY(0deg) translateY(-8px) !important;
        }
    }

    .browser-window {
        background: #fff;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
        transition: transform 0.4s ease;
        flex-shrink: 0;
        width: 100%;
        max-width: 560px;
    }

    .browser-header {
        background: #f6f6f6;
        border-bottom: 1px solid #d4d4d4;
        padding: 8px 12px;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    @media (min-width: 768px) {
        .browser-header {
            padding: 12px 16px;
            gap: 12px;
        }
    }

    .browser-buttons {
        display: flex;
        gap: 6px;
    }

    @media (min-width: 768px) {
        .browser-buttons {
            gap: 8px;
        }
    }

    .browser-btn {
        width: 10px;
        height: 10px;
        border-radius: 50%;
        display: inline-block;
    }

    @media (min-width: 768px) {
        .browser-btn {
            width: 12px;
            height: 12px;
        }
    }

    .browser-btn.close {
        background: #ff5f57;
    }

    .browser-btn.minimize {
        background: #ffbd2e;
    }

    .browser-btn.maximize {
        background: #28ca42;
    }

    .browser-url {
        flex: 1;
        background: white;
        border: 1px solid #d4d4d4;
        border-radius: 4px;
        padding: 3px 8px;
        font-size: 11px;
        color: #666;
        text-align: center;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    @media (min-width: 768px) {
        .browser-url {
            border-radius: 6px;
            padding: 4px 12px;
            font-size: 13px;
        }
    }

    .browser-content {
        width: 100%;
        height: 400px;
        background: white;
        position: relative;
        overflow: hidden;
    }

    .browser-content iframe {
        width: 1400px;
        height: 1000px;
        border: none;
        transform: scale(0.4);
        transform-origin: 0 0;
        display: block;
    }
</style>

<script>
    function scaleIframes() {
        const windows = document.querySelectorAll('.browser-window');
        const isMobile = window.innerWidth < 768;

        windows.forEach(window => {
            const content = window.querySelector('.browser-content');
            const iframe = window.querySelector('iframe');

            if (!content || !iframe) return;

            if (isMobile) {
                // Calculate available width (window width minus padding)
                const availableWidth = window.clientWidth;

                // Calculate scale based on available width
                // We want the 1400px iframe to fit in the available width
                const scale = availableWidth / 1400;

                // Apply scale to iframe
                iframe.style.transform = `scale(${scale})`;
                iframe.style.transformOrigin = '0 0';

                // Adjust content height to match scaled iframe
                const scaledHeight = 1000 * scale;
                content.style.height = `${scaledHeight}px`;
            } else {
                // Desktop: reset to default 0.4 scale
                iframe.style.transform = 'scale(0.4)';
                iframe.style.transformOrigin = '0 0';
                content.style.height = '400px';
            }
        });
    }

    // Run on load and resize
    if (typeof window !== 'undefined') {
        scaleIframes();
        window.addEventListener('resize', scaleIframes);
        // Also run after a short delay to ensure content is loaded
        setTimeout(scaleIframes, 100);
    }
</script>
